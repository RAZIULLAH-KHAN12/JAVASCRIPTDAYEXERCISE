{"version":3,"file":"src_App_Tooltip_js.app.js","mappings":";;;;;;;;;;;;;;AAAO;;AAEP;;AAEA,iEAAe;AACf;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC3BA;AACgD;;AAEhD;;AAEO,sBAAsB,kDAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA","sources":["webpack://modules-01-starting-project/./src/App/Component.js","webpack://modules-01-starting-project/./src/App/Tooltip.js"],"sourcesContent":["export function doSomething() {\n\n};\n\nexport default class {\n    constructor(hostElementId, insertBefore = false) {\n      if (hostElementId) {\n        this.hostElement = document.getElementById(hostElementId);\n      } else {\n        this.hostElement = document.body;\n      }\n      this.insertBefore = insertBefore;\n    }\n  \n    detach() {\n      if (this.element) {\n        this.element.remove();\n        // this.element.parentElement.removeChild(this.element);\n      }\n    }\n  \n    attach() {\n      this.hostElement.insertAdjacentElement(\n        this.insertBefore ? 'afterbegin' : 'beforeend',\n        this.element\n      );\n    }\n  }","// eslint-disable-next-line no-unused-vars\nimport  Cmp, { doSomething } from './Component';\n\nconsole.log('Tooltip loading');\n\nexport class Tooltip extends Cmp {\n    constructor(closeNotifierFunction, text, hostElementId) {\n      super(hostElementId);\n      this.closeNotifier = closeNotifierFunction;\n      this.text = text; \n      this.closeTooltip = () => {\n        this.detach();\n        this.closeNotifier();\n      };\n      this.create();\n    }\n  \n    create() {\n      const tooltipElement = document.createElement('div');\n      tooltipElement.className = 'card';\n      const tooltipTemplate = document.getElementById('tooltip');\n      const tooltipBody = document.importNode(tooltipTemplate.content, true);\n      tooltipBody.querySelector('p').textContent = this.text;\n      tooltipElement.append(tooltipBody);\n  \n      const hostElPosLeft = this.hostElement.offsetLeft;\n      const hostElPosTop = this.hostElement.offsetTop;\n      const hostElHeight = this.hostElement.clientHeight;\n      const parentElementScrolling = this.hostElement.parentElement.scrollTop;\n  \n      const x = hostElPosLeft + 20;\n      const y = hostElPosTop + hostElHeight - parentElementScrolling - 10;\n  \n      tooltipElement.style.position = 'absolute';\n      tooltipElement.style.left = x + 'px'; // 500px\n      tooltipElement.style.top = y + 'px';\n  \n      tooltipElement.addEventListener('click', this.closeTooltip);\n      this.element = tooltipElement;\n    }\n  }"],"names":[],"sourceRoot":""}